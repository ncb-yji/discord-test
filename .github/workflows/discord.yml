name: Notify Discord on Push (main, release, develop only)

on:
  push:
    branches:
      - main
      - release
      - develop

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 전체 히스토리 필요

      - name: Notify Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          ACTOR: ${{ github.actor }}
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          # 작성자 닉네임 매핑
          case "$ACTOR" in
            ncb-yji) NICKNAME="양정인" ;;
            leehj7739) NICKNAME="이희준" ;;
            jihun-01) NICKNAME="최지훈" ;;
            naGGuri) NICKNAME="나희수" ;;
            hyeonjinleeluck) NICKNAME="이현진" ;;
            *) NICKNAME="$ACTOR" ;;
          esac

          # 이전 브랜치 상태 가져오기
          git fetch origin "$BRANCH_NAME"

          # 첫 커밋인 경우 알림 생략
          if [ "$(git rev-list --count HEAD)" -eq 1 ]; then
            echo "🔕 최초 커밋이므로 push 알림 생략"
            exit 0
          fi

          # 브랜치 비교 범위 설정
          RANGE="origin/${BRANCH_NAME}..HEAD"
          COMMITS=$(git log --pretty=format:"- %h %s" $RANGE)

          if [ -z "$COMMITS" ]; then
            echo "❗커밋 내역 없음"
            exit 0
          fi

          # 메시지 작성
          MESSAGE="📌 **PUSH : \`$BRANCH_NAME\`**\n👤 작성자: \`$NICKNAME\`\n$COMMITS"

          # 줄바꿈 처리
          MESSAGE_ESCAPED=$(echo "$MESSAGE" | sed ':a;N;$!ba;s/\n/\\n/g')

          # Discord Webhook 전송
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"$MESSAGE_ESCAPED\", \"username\": \"PushBot\"}" \
               "$DISCORD_WEBHOOK"
