name: Notify Discord on Selected Branch Create/Delete

on:
  create:
    branches:
      - '**'
  delete:
    branches:
      - '**'

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Notify only selected branches
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          EVENT_NAME: ${{ github.event_name }}
          REF_TYPE: ${{ github.event.ref_type }}
          REF_NAME: ${{ github.ref_name }}
          ACTOR: ${{ github.actor }}
        run: |
          # 브랜치가 아니면 무시
          if [[ "$REF_TYPE" != "branch" ]]; then
            echo "⏩ 감지된 리소스는 브랜치가 아님: $REF_TYPE. 종료"
            exit 0
          fi

          BRANCH_NAME="$REF_NAME"

          # 닉네임 매핑
          case "$ACTOR" in
            ncb-yji) NICKNAME="양정인" ;;
            leehj7739) NICKNAME="이희준" ;;
            jihun-01) NICKNAME="최지훈" ;;
            naGGuri) NICKNAME="나희수" ;;
            hyeonjinleeluck) NICKNAME="이현진" ;;
            *) NICKNAME="$ACTOR" ;;
          esac

          # 감시 대상 브랜치인지 확인
          SHOULD_NOTIFY=false
          if [[ "$BRANCH_NAME" == "release" || "$BRANCH_NAME" == "develop" ]]; then
            SHOULD_NOTIFY=true
          elif [[ "$BRANCH_NAME" == main* || "$BRANCH_NAME" == release* ]]; then
            SHOULD_NOTIFY=true
          fi
          if [[ "$BRANCH_NAME" == temp* ]]; then
            SHOULD_NOTIFY=false
          fi
          if [ "$SHOULD_NOTIFY" = false ]; then
            echo "📭 감시 대상 아님: $BRANCH_NAME"
            exit 0
          fi

          # 메시지 구성
          if [ "$EVENT_NAME" = "create" ]; then
            git fetch --all
            HEAD_SHA=$(git rev-parse origin/$BRANCH_NAME)

            PARENT_BRANCH=""
            for base in main release develop; do
              if git show-ref --quiet refs/remotes/origin/$base; then
                BASE_SHA=$(git rev-parse origin/$base)
                if [ "$HEAD_SHA" = "$BASE_SHA" ]; then
                  PARENT_BRANCH="$base"
                  break
                fi
              fi
            done

            if [ -n "$PARENT_BRANCH" ]; then
              MESSAGE="🆕 **브랜치 생성**\n👤 작성자: \`$NICKNAME\`\n🌿 브랜치: \`$BRANCH_NAME\`\n🔀 기준 브랜치: \`$PARENT_BRANCH\`"
            else
              MESSAGE="🆕 **브랜치 생성**\n👤 작성자: \`$NICKNAME\`\n🌿 브랜치: \`$BRANCH_NAME\`\n❓ 기준 브랜치: 추정 불가"
            fi
          elif [ "$EVENT_NAME" = "delete" ]; then
            MESSAGE="🗑️ **브랜치 삭제**\n👤 작성자: \`$NICKNAME\`\n🌿 브랜치: \`$BRANCH_NAME\`"
          else
            MESSAGE="⚠️ 알 수 없는 이벤트 \`$EVENT_NAME\`"
          fi

          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"$MESSAGE\", \"username\": \"BranchWatcher\"}" \
               "$DISCORD_WEBHOOK"
